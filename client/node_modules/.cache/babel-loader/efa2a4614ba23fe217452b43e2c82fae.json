{"ast":null,"code":"var _jsxFileName = \"/Users/gautamtankha/Documents/Berkeley Coding Course/All Projects/projects/shop-shop/client/src/components/Cart/index.js\";\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport React, { useEffect } from \"react\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\n\nconst Cart = () => {\n  const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, {\n    data\n  }] = useLazyQuery(QUERY_CHECKOUT);\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({\n        type: ADD_MULTIPLE_TO_CART,\n        products: [...cart]\n      });\n    }\n\n    ;\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({\n      type: TOGGLE_CART\n    });\n  }\n\n  if (!state.cartOpen) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart-closed\",\n      onClick: toggleCart,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      role: \"img\",\n      \"aria-label\": \"trash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDED2\"));\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach(item => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n    state.cart.forEach(item => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n        console.log(productIds);\n      }\n    });\n    getCheckout({\n      variables: {\n        products: productIds\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"close\",\n    onClick: toggleCart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \"[close]\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"Shopping Cart\"), state.cart.length ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, state.cart.map(item => /*#__PURE__*/React.createElement(CartItem, {\n    key: item._id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-row space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, \"Total: $\", calculateTotal()), Auth.loggedIn() ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: submitCheckout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, \"Checkout\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"(log in to check out)\"))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"shocked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, \"\\uD83D\\uDE31\"), \"You haven't added anything to your cart yet!\"));\n};\n\nexport default Cart;","map":{"version":3,"sources":["/Users/gautamtankha/Documents/Berkeley Coding Course/All Projects/projects/shop-shop/client/src/components/Cart/index.js"],"names":["CartItem","Auth","useStoreContext","React","useEffect","TOGGLE_CART","ADD_MULTIPLE_TO_CART","idbPromise","QUERY_CHECKOUT","loadStripe","useLazyQuery","Cart","stripePromise","state","dispatch","getCheckout","data","getCart","cart","type","products","length","toggleCart","cartOpen","calculateTotal","sum","forEach","item","price","purchaseQuantity","toFixed","submitCheckout","productIds","i","push","_id","console","log","variables","map","loggedIn"],"mappings":"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","sourcesContent":["import CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport './style.css';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport React, { useEffect } from \"react\";\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\"\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/react-hooks';\n\n\nconst Cart = () => {\n    const stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n    const [state, dispatch] = useStoreContext();\n    const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n    useEffect(() => {\n        async function getCart() {\n          const cart = await idbPromise('cart', 'get');\n          dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n        };\n      \n        if (!state.cart.length) {\n          getCart();\n        }\n      }, [state.cart.length, dispatch]);\n\n\n    function toggleCart() {\n        dispatch({ type: TOGGLE_CART });\n    }\n    if (!state.cartOpen) {\n        return (\n            <div className=\"cart-closed\" onClick={toggleCart}>\n                <span\n                    role=\"img\"\n                    aria-label=\"trash\">ðŸ›’</span>\n            </div>\n        );\n    }\n    function calculateTotal() {\n        let sum = 0;\n        state.cart.forEach(item => {\n            sum += item.price * item.purchaseQuantity;\n        });\n        return sum.toFixed(2);\n    }\n    function submitCheckout() {\n        const productIds = [];\n      \n        state.cart.forEach((item) => {\n          for (let i = 0; i < item.purchaseQuantity; i++) {\n            productIds.push(item._id);\n            console.log(productIds);\n          }\n        });\n        getCheckout({\n            variables: { products: productIds }\n          });\n      }\n    return (\n        <div className=\"cart\">\n            <div className=\"close\" onClick={toggleCart}>[close]</div>\n            <h2>Shopping Cart</h2>\n            {state.cart.length ? (\n                <div>\n                    {state.cart.map(item => (\n                        <CartItem key={item._id} item={item} />\n                    ))}\n                    <div className=\"flex-row space-between\">\n                        <strong>Total: ${calculateTotal()}</strong>\n                        {\n                            Auth.loggedIn() ?\n                            <button onClick={submitCheckout}>\n                            Checkout\n                          </button>\n                                :\n                                <span>(log in to check out)</span>\n                        }\n                    </div>\n                </div>\n            ) : (\n                    <h3>\n                        <span role=\"img\" aria-label=\"shocked\">\n                            ðŸ˜±\n      </span>\n      You haven't added anything to your cart yet!\n                    </h3>\n                )}\n        </div>\n    );\n};\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}